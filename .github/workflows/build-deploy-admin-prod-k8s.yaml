name: Loyalty Admin API Prod Build and Deploy

on:
  push:
    tags:
      - 'v*'

env:
  CONTAINER_NAME: "loyalty-admin-api"
  CONTAINER_REGISTRY: "n1coprodloyalty.azurecr.io"
  CONTAINER_REGISTRY_USERNAME: "n1coprodloyalty"
  NUGET_USER_NAME: "cms"
  
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: prod-deploy

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
        
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Log in to registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ env.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASS }}
          
      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          tags: |
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:${{ github.ref_name }} 
            ${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:latest
          file: ./src/AdminApi/Dockerfile
          build-args: |
            NUGET_USER_NAME=${{ env.NUGET_USER_NAME }}
            NUGET_AUTH_PASS=${{ secrets.NUGET_USER_PASS }}
          cache-from: type=registry,ref=${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}:latest
          cache-to: type=inline
          
  deploy:
    runs-on: [self-hosted, prod-loyalty]
    environment:
      name: prod-deploy
    needs: build
    env:
      KUBERNETES_NAMESPACE: "loyalty"
      KUBERNETES_RESOURCES_NAME: "loyalty-admin-api"
      HELM_RELEASE_NAME: "loyalty-admin-api-prod"
      HELM_CHART_VERSION: "1.5.0"
      HELM_CHART_NAME: "chart"
      HELM_CONTAINER_REGISTRY: "hb4prodhelm.azurecr.io"
      HELM_CONTAINER_REGISTRY_USERNAME: "hb4prodhelm"
      AKS_CLUSTER_NAME: "prod-loyalty-cluster"
      AKS_RESOURCE_GROUP: "prod-loyalty"
      
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'
      - name: Setting kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'
      - name: Generar archivo YAML
        run: |
          envsubst < ./deploy/helm-config/prod/admin-values.yaml > values-overrides.yaml
      - name: Instalar Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      - name: Helm Login and Install/Upgrade chart
        run: |
          helm registry login ${{ env.HELM_CONTAINER_REGISTRY }} --username ${{ env.HELM_CONTAINER_REGISTRY_USERNAME }} --password ${{ secrets.HELM_CONTAINER_REGISTRY_PASSWORD }}
          helm upgrade \
          --set image.repository=${{ env.CONTAINER_REGISTRY }}/${{ env.CONTAINER_NAME }}  \
          --set image.tag=${{ github.ref_name }} \
          --set datadogLabels.version=${{ github.ref_name }} \
          --set doppler.secretToken=${{ secrets.ADMIN_DOPPLER_SECRET_TOKEN }} \
          -f values-overrides.yaml \
          ${{ env.HELM_RELEASE_NAME }} oci://${{ env.HELM_CONTAINER_REGISTRY }}/helm/${{ env.HELM_CHART_NAME }} \
           --install --create-namespace --namespace ${{ env.KUBERNETES_NAMESPACE }} --version ${{ env.HELM_CHART_VERSION }}
      - name: Check Deployment
        run: |
          kubectl rollout status deployment ${{ env.KUBERNETES_RESOURCES_NAME }} -n ${{ env.KUBERNETES_NAMESPACE }}
      
      - name: Deploy Success
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          details: Loyalty Admin API Prod Deploy Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: Deploy Failure
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          details: Loyalty Admin API Prod Deploy failed
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}